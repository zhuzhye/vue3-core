{"version":3,"file":"reactivity.esm-bundler.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts","../src/ref.ts"],"sourcesContent":["export const isObject = (value: any) => typeof value === \"object\" && value !== null;\r\nexport const extend = Object.assign;\r\nexport const isArray = Array.isArray;\r\nexport const isFunction = (value) => typeof value === \"function\";\r\nexport const isString = (value) => typeof value === \"string\";\r\nexport const isNumber = (value) => typeof value === \"number\";\r\nexport const isIntergerKey = (key) => parseInt(key) + \"\" === key;\r\nlet hasOwnpRroperty = Object.prototype.hasOwnProperty;\r\nexport const hasOwn = (target, key) => hasOwnpRroperty.call(target, key);\r\nexport const hasChanged = (oldValue, value) => oldValue !== value;\r\n","import { isArray, isNumber } from \"@vue/shared\";\r\nimport { TriggerOrTypes } from \"./operators\";\r\nimport { isIntergerKey } from \"../../shared/src/index\";\r\n\r\nexport function effect(fn, options: any = {}) {\r\n  // 需要让effect变成响应的effect,可以做到数据变化重新执行\r\n  const effect = createReactiveEffect(fn, options);\r\n  if (!options.lazy) {\r\n    //默认的effect会先执行\r\n    effect(); //响应式的effect默认先执行一次\r\n  }\r\n  return effect;\r\n}\r\nlet uid = 0;\r\nlet activeEffect; //存储当前的effect\r\nconst effectStack = [];\r\nfunction createReactiveEffect(fn, options) {\r\n  const effect = function reactiveEffect() {\r\n    // 保证effect没有加入到effectStack中\r\n    if (!effectStack.includes(effect)) {\r\n      try {\r\n        effectStack.push(effect);\r\n        activeEffect = effect;\r\n        return fn(); //函数执行会取值 会执行get方法\r\n      } finally {\r\n        effectStack.pop();\r\n        activeEffect = effectStack[effectStack.length - 1];\r\n      }\r\n    }\r\n  };\r\n\r\n  effect.id = uid++; //制作一个effect标识 用于区分effect\r\n  effect._isEffect = true; //用于标识这个式响应式的effect\r\n  effect.raw = fn; //保留effect对应的原函数\r\n  effect.options = options; //在effect上保存用户的属性\r\n  return effect;\r\n}\r\n// 让某个对象中的属性收集当前他对应的effect函数\r\nconst targetMap = new WeakMap();\r\nexport function track(target, type, key) {\r\n  // activeEffect 可以拿到当前的effect\r\n  console.log(target, type, key);\r\n  if (activeEffect === undefined) {\r\n    //此属性不用收集，因为没有effect使用\r\n    return;\r\n  }\r\n  let depsMap = targetMap.get(target);\r\n  if (!depsMap) {\r\n    targetMap.set(target, (depsMap = new Map()));\r\n  }\r\n  let dep = depsMap.get(key);\r\n  if (!dep) {\r\n    depsMap.set(key, (dep = new Set()));\r\n  }\r\n  if (!dep.has(activeEffect)) {\r\n    dep.add(activeEffect);\r\n  }\r\n  console.log(targetMap);\r\n}\r\n\r\nexport function trigger(target, type, key?, newValue?, oldValue?) {\r\n  // 如果这个属性没有收集过effect 那就不需要做任何操作\r\n  const depsMap = targetMap.get(target);\r\n  if (!depsMap) return;\r\n\r\n  const effects = new Set();\r\n  const add = (effectToAdd) => {\r\n    if (effectToAdd) {\r\n      effectToAdd.forEach((effect) => {\r\n        effects.add(effect);\r\n      });\r\n    }\r\n  };\r\n  // 将所有要执行的effect 全部存到一个新的集合中，最终一起执行\r\n  // 1.看修改的是不是数组的长度，因为该长度影响比较大\r\n  if (key === \"length\" && isArray(target)) {\r\n    depsMap.forEach((dep, key) => {\r\n      if (key === \"length\" || key > newValue) {\r\n        // 如果更改的长度小于收集的索引，那么索引也要触发effect重新执行\r\n        add(dep);\r\n      }\r\n    });\r\n  } else {\r\n    // 可能是对象\r\n    if (key !== undefined) {\r\n      add(depsMap.get(key));\r\n    }\r\n    // 如果数组中的某一个索引怎么办？\r\n    switch (type) {\r\n      case TriggerOrTypes.ADD:\r\n        if (isArray(target) && isIntergerKey(key)) {\r\n          add(depsMap.get(\"length\"));\r\n        }\r\n    }\r\n  }\r\n  effects.forEach((effect: any) => effect());\r\n}\r\n// 函数调用是一个栈型结构\r\n","// 实现 new Proxy （target，handler）\r\n// 是不是仅读的，仅读的属性set会报异常\r\n\r\nimport { extend, hasChanged, hasOwn, isArray, isIntergerKey, isObject } from \"@vue/shared\";\r\nimport { reactive, readonly } from \"./reactive\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { track, trigger } from \"./effect\";\r\nconst get = createGetter();\r\nconst set = createSetter();\r\n\r\nconst shallowGet = createGetter(false, true);\r\nconst shallowSet = createSetter(true);\r\n\r\nconst readonlyGet = createGetter(true);\r\nconst shallowReadonlyGet = createGetter(true, true);\r\n\r\nexport const mutableHandlers = {\r\n  get,\r\n  set,\r\n};\r\n\r\nexport const shallowReactiveHandlers = {\r\n  get: shallowGet,\r\n  set: shallowSet,\r\n};\r\n\r\nlet readonlyObj = {\r\n  set: (target, key) => {\r\n    console.warn(`set on key ${key} failed`);\r\n  },\r\n};\r\n\r\nexport const readonlyHandlers = extend(\r\n  {\r\n    get: readonlyGet,\r\n  },\r\n  readonlyObj\r\n);\r\n\r\nexport const shallowReadonlyHandlers = extend(\r\n  {\r\n    get: shallowReadonlyGet,\r\n  },\r\n  readonlyObj\r\n);\r\n\r\n// 是不是仅读的 是不是仅读的属性 set 时会报异常\r\n// 是不是深度的\r\n// 拦截获取\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n  return function get(target, key, receiver) {\r\n    // 后续Object上的方法 会被迁移到Reflect Reflect.getProptypeof\r\n    // 以前target[key] =value 方式设置值可能失败，并不会报异常，也没有返回的标识\r\n    // Reflect 方法具备返回值\r\n    const res = Reflect.get(target, key, receiver);\r\n    if (!isReadonly) {\r\n      // 收集依赖，数据变化后更新对应的视图\r\n      console.log(\"执行effect时会取值\", \"收集effect\");\r\n      console.log(key, \"key\");\r\n      track(target, TrackOpTypes.GET, key);\r\n    }\r\n    if (shallow) {\r\n      return res;\r\n    }\r\n    if (isObject(res)) {\r\n      // vue2 是一上来就递归 vue3是当取值时会进行代理，vue3的代理模式是懒代理\r\n      return isReadonly ? readonly(res) : reactive(res);\r\n    }\r\n    return res;\r\n  };\r\n}\r\nfunction createSetter(shallow = false) {\r\n  return function set(target, key, value, receiver) {\r\n    const oldValue = target[key];\r\n    let hadKey = isArray(target) && isIntergerKey(key) ? Number(key) < target.length : hasOwn(target, key);\r\n    const result = Reflect.set(target, key, value, receiver);\r\n    if (!hadKey) {\r\n      trigger(target, TriggerOrTypes.ADD, key, value);\r\n    } else if (hasChanged(oldValue, value)) {\r\n      trigger(target, TriggerOrTypes.SET, key, value, oldValue);\r\n    }\r\n    // 区分新增和修改 vue2无法监控更改索引，无法监控数组的长度\r\n    // 当数据更新是 通知对应的属性effect重新执行\r\n  };\r\n}\r\n","import { isObject } from \"@vue/shared\";\r\nimport { mutableHandlers, shallowReactiveHandlers, readonlyHandlers, shallowReadonlyHandlers } from \"./baseHandlers\";\r\n\r\nexport function reactive(target) {\r\n  return createReactiveObject(target, false, mutableHandlers);\r\n}\r\n\r\nexport function shallowReactive(target) {\r\n  return createReactiveObject(target, false, shallowReactiveHandlers);\r\n}\r\n\r\nexport function readonly(target) {\r\n  return createReactiveObject(target, true, readonlyHandlers);\r\n}\r\n\r\nexport function shallowReadonly(target) {\r\n  return createReactiveObject(target, true, shallowReadonlyHandlers);\r\n}\r\n\r\n// 是不是仅读，是不是深度，是不是柯里化 new Proxy () 最核心的需要拦截，数据的读取和数据的修改\r\nconst reactiveMap = new WeakMap(); //会自动垃圾回收，不会造成内存泄露，存储的key只能是对象\r\nconst readonlyMap = new WeakMap();\r\nexport function createReactiveObject(target: any, isReadonly: boolean, baseHandlers: any) {\r\n  // 如果目标不是对象 没法拦截了reactive 这个api只能拦截对象类型\r\n  if (!isObject(target)) {\r\n    return target;\r\n  }\r\n  // 如果某个对象已经代理过了 就不代理 可能一个对象 被代理是深度， 又仅读代理\r\n\r\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap;\r\n\r\n  const exisitProxy = proxyMap.get(target);\r\n  if (exisitProxy) {\r\n    return exisitProxy;\r\n  }\r\n\r\n  const proxy = new Proxy(target, baseHandlers);\r\n\r\n  proxyMap.set(target, proxy); //将要代理的对象和对应代理结果缓存起来\r\n  return proxy;\r\n}\r\n","import { hasChanged, isArray, isObject } from \"@vue/shared\";\r\nimport { TrackOpTypes, TriggerOrTypes } from \"./operators\";\r\nimport { reactive } from \"./reactive\";\r\nimport { track, trigger } from \"./effect\";\r\n\r\nexport function ref(value) {\r\n  // value是一个普通类型\r\n  // 将普通类型变成一个对象\r\n  // 可以是对象但是一般情况下是对象直接用reactive更合理\r\n  return createRef(value);\r\n}\r\n// ref和reactive 的区别 reactive内部采用proxy ref内部使用的是defineProperty\r\nexport function shallowRef(value) {\r\n  return createRef(value, true);\r\n}\r\n\r\nconst convert = (val) => (isObject(val) ? reactive(val) : val);\r\n// beta版本 之前的ref就是个对象,由于对象不方便扩展，改成了类\r\nclass RefImpl {\r\n  public _value; //标识声明了一个_value属性 但是没有属性\r\n  public _v_isRef = true; //产生的实例会添加 _v_isRef这个属性\r\n  constructor(public rawValue, public shallow) {\r\n    //参数中前面增加修饰符 标识此属性放到了实例上\r\n    this._value = shallow ? rawValue : convert(rawValue); //如果是深度需要把里面的都变成响应式\r\n  }\r\n  get value() {\r\n    // 代理 取值取value 会帮我们代理到 _value上\r\n    track(this, TrackOpTypes.GET, \"value\");\r\n    return this._value;\r\n  }\r\n  set value(newValue) {\r\n    if (hasChanged(newValue, this.rawValue)) {\r\n      // 判断老值和新值是否有变化\r\n      this.rawValue = newValue; //新值作为老值\r\n      this._value = this.shallow ? newValue : convert(newValue);\r\n\r\n      trigger(this, TriggerOrTypes.SET, \"value\", newValue);\r\n    }\r\n  }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n  return new RefImpl(rawValue, shallow);\r\n}\r\n\r\nclass ObjectRefImpl {\r\n  public _v_isRef = true; //产生的实例会添加 _v_isRef这个属性\r\n  constructor(public target, public key) {}\r\n  get value() {\r\n    return this.target[this.key];\r\n  }\r\n  set value(newValue) {\r\n    this.target[this.key] = newValue;\r\n  }\r\n}\r\n// 将某一个key对应的值，转化为ref\r\nexport function toRef(target, key) {\r\n  // 可以把一个对象的值转化城 ref类型\r\n  return new ObjectRefImpl(target, key);\r\n}\r\n\r\nexport function toRefs(object) {\r\n  // object 可能传递的是一个数组 或者 对象\r\n  const ret = isArray(object) ? new Array(object.length) : {};\r\n  for (let key in object) {\r\n    ret[key] = toRef(object, key);\r\n  }\r\n  return ret;\r\n}\r\n"],"names":[],"mappings":"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"}