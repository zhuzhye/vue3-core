{"code":"import { hasChanged, isArray, isObject } from \"@vue/shared\";\r\nimport { reactive } from \"./reactive\";\r\nimport { track, trigger } from \"./effect\";\r\nexport function ref(value) {\r\n    // value是一个普通类型\r\n    // 将普通类型变成一个对象\r\n    // 可以是对象但是一般情况下是对象直接用reactive更合理\r\n    return createRef(value);\r\n}\r\n// ref和reactive 的区别 reactive内部采用proxy ref内部使用的是defineProperty\r\nexport function shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nconst convert = (val) => (isObject(val) ? reactive(val) : val);\r\n// beta版本 之前的ref就是个对象,由于对象不方便扩展，改成了类\r\nclass RefImpl {\r\n    rawValue;\r\n    shallow;\r\n    _value; //标识声明了一个_value属性 但是没有属性\r\n    _v_isRef = true; //产生的实例会添加 _v_isRef这个属性\r\n    constructor(rawValue, shallow) {\r\n        this.rawValue = rawValue;\r\n        this.shallow = shallow;\r\n        //参数中前面增加修饰符 标识此属性放到了实例上\r\n        this._value = shallow ? rawValue : convert(rawValue); //如果是深度需要把里面的都变成响应式\r\n    }\r\n    get value() {\r\n        // 代理 取值取value 会帮我们代理到 _value上\r\n        track(this, 0 /* TrackOpTypes.GET */, \"value\");\r\n        return this._value;\r\n    }\r\n    set value(newValue) {\r\n        if (hasChanged(newValue, this.rawValue)) {\r\n            // 判断老值和新值是否有变化\r\n            this.rawValue = newValue; //新值作为老值\r\n            this._value = this.shallow ? newValue : convert(newValue);\r\n            trigger(this, 1 /* TriggerOrTypes.SET */, \"value\", newValue);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nclass ObjectRefImpl {\r\n    target;\r\n    key;\r\n    _v_isRef = true; //产生的实例会添加 _v_isRef这个属性\r\n    constructor(target, key) {\r\n        this.target = target;\r\n        this.key = key;\r\n    }\r\n    get value() {\r\n        return this.target[this.key];\r\n    }\r\n    set value(newValue) {\r\n        this.target[this.key] = newValue;\r\n    }\r\n}\r\n// 将某一个key对应的值，转化为ref\r\nexport function toRef(target, key) {\r\n    // 可以把一个对象的值转化城 ref类型\r\n    return new ObjectRefImpl(target, key);\r\n}\r\nexport function toRefs(object) {\r\n    // object 可能传递的是一个数组 或者 对象\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (let key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\n//# sourceMappingURL=ref.js.map","references":["D:/学习/学习计划/Study-Vue3/vue3/packages/shared/src/index.ts","D:/学习/学习计划/Study-Vue3/vue3/packages/reactivity/src/operators.ts","D:/学习/学习计划/Study-Vue3/vue3/packages/reactivity/src/reactive.ts","D:/学习/学习计划/Study-Vue3/vue3/packages/reactivity/src/effect.ts"],"map":"{\"version\":3,\"file\":\"ref.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../packages/reactivity/src/ref.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAE5D,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AAE1C,MAAM,UAAU,GAAG,CAAC,KAAK;IACvB,eAAe;IACf,cAAc;IACd,gCAAgC;IAChC,OAAO,SAAS,CAAC,KAAK,CAAC,CAAC;AAC1B,CAAC;AACD,6DAA6D;AAC7D,MAAM,UAAU,UAAU,CAAC,KAAK;IAC9B,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAChC,CAAC;AAED,MAAM,OAAO,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC/D,oCAAoC;AACpC,MAAM,OAAO;IAGQ;IAAiB;IAF7B,MAAM,CAAC,CAAC,wBAAwB;IAChC,QAAQ,GAAG,IAAI,CAAC,CAAC,uBAAuB;IAC/C,YAAmB,QAAQ,EAAS,OAAO;QAAxB,aAAQ,GAAR,QAAQ,CAAA;QAAS,YAAO,GAAP,OAAO,CAAA;QACzC,wBAAwB;QACxB,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAmB;IAC3E,CAAC;IACD,IAAI,KAAK;QACP,8BAA8B;QAC9B,KAAK,CAAC,IAAI,4BAAoB,OAAO,CAAC,CAAC;QACvC,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IACD,IAAI,KAAK,CAAC,QAAQ;QAChB,IAAI,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE;YACvC,eAAe;YACf,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,QAAQ;YAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAE1D,OAAO,CAAC,IAAI,8BAAsB,OAAO,EAAE,QAAQ,CAAC,CAAC;SACtD;IACH,CAAC;CACF;AACD,SAAS,SAAS,CAAC,QAAQ,EAAE,OAAO,GAAG,KAAK;IAC1C,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACxC,CAAC;AAED,MAAM,aAAa;IAEE;IAAe;IAD3B,QAAQ,GAAG,IAAI,CAAC,CAAC,uBAAuB;IAC/C,YAAmB,MAAM,EAAS,GAAG;QAAlB,WAAM,GAAN,MAAM,CAAA;QAAS,QAAG,GAAH,GAAG,CAAA;IAAG,CAAC;IACzC,IAAI,KAAK;QACP,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,CAAC;IACD,IAAI,KAAK,CAAC,QAAQ;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;IACnC,CAAC;CACF;AACD,qBAAqB;AACrB,MAAM,UAAU,KAAK,CAAC,MAAM,EAAE,GAAG;IAC/B,qBAAqB;IACrB,OAAO,IAAI,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,MAAM,CAAC,MAAM;IAC3B,0BAA0B;IAC1B,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC5D,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;QACtB,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KAC/B;IACD,OAAO,GAAG,CAAC;AACb,CAAC\"}"}
